version: "3.8"

services:
  postgres_user:
    container_name: postgres_user
    image: postgres:latest
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db_userservice
    volumes:
      - user_data:/var/lib/postgresql/data
    restart: unless-stopped

  postgres_message:
    container_name: postgres_message
    image: postgres:latest
    ports:
      - "5436:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db_messageservice
    volumes:
      - message_data:/var/lib/postgresql/data
    restart: unless-stopped

  frontend:
    build:
      context: ./my-app
    container_name: frontend
    restart: unless-stopped

  # --- User Service ---
  user-service:
    build:
      context: ./src/user-service
    container_name: user-service
    ports:
      - "8081:8081"
    depends_on:
      - postgres_user
    restart: unless-stopped

  kong-database:
    image: postgres:13
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong_data:/var/lib/postgresql/data
    restart: unless-stopped

  # --- Kong Gateway ---
  kong:
    image: kong/kong-gateway:3.6
    container_name: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000
    ports:
      - "8000:8000" # Public access (proxy)
      - "8001:8001" # Admin API
    depends_on:
      - kong-database
      - user-service
      - frontend
    restart: unless-stopped

  # --- Prometheus ---
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  # --- Zookeeper cho Kafka ---
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.5.0
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000

  # --- Kafka ---
  # kafka:
  #   image: confluentinc/cp-kafka:7.5.0
  #   container_name: kafka
  #   ports:
  #     - "9092:9092"
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  user_data:
  message_data:
  kong_data:
